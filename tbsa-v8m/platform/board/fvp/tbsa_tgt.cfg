///** @file
// * Copyright (c) 2018, Arm Limited or its affiliates. All rights reserved.
// * SPDX-License-Identifier : Apache-2.0
// *
// * Licensed under the Apache License, Version 2.0 (the "License");
// * you may not use this file except in compliance with the License.
// * You may obtain a copy of the License at
// *
// *  http://www.apache.org/licenses/LICENSE-2.0
// *
// * Unless required by applicable law or agreed to in writing, software
// * distributed under the License is distributed on an "AS IS" BASIS,
// * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// * See the License for the specific language governing permissions and
// * limitations under the License.
//**/
//PERIPHs
uart.num=1;
uart.0.vendor_id = 0x0;
uart.0.device_id = 0x0;
uart.0.base = 0x40004000;
uart.0.offset = 0x0;
uart.0.intr_id = 0xFF;
uart.0.clk_src = 0x10000000;
uart.0.stdio = 0x1;
uart.0.attribute = NONSECURE_PROGRAMMABLE;

timer.num = 2;
timer.0.vendor_id = 0x0;
timer.0.device_id = 0x0;
timer.0.base = 0x50000000;
timer.0.intr_id = 0x8;
timer.0.clk_src = 0x10000000;
timer.0.attribute = SECURE_PROGRAMMABLE;

timer.1.vendor_id = 0x0;
timer.1.device_id = 0x0;
timer.1.base = 0x50001000;
timer.1.intr_id = 0x9;
timer.1.clk_src = 0x10000000;
timer.1.attribute = SECURE_PROGRAMMABLE;

watchdog.num = 1;
watchdog.0.vendor_id = 0x0;
watchdog.0.device_id = 0x0;
watchdog.0.base = 0x50008000;
watchdog.0.intr_id = 0xFF;
watchdog.0.clk_src = 0x10000000;
watchdog.0.attribute = SECURE_PROGRAMMABLE;

//MEMory
sram.num = 3;
sram.0.start = 0x30000000;
sram.0.end = 0x303FFFFF;
sram.0.attribute = MEM_SECURE;
sram.0.mem_type = TYPE_NORMAL_READ_WRITE;
sram.0.dpm_index = 0;

sram.1.start = 0x20000000;
sram.1.end = 0x203FFFFF;
sram.1.attribute = MEM_SECURE;
sram.1.mem_type = TYPE_NORMAL_READ_WRITE;
sram.1.dpm_index = 0;

sram.2.start = 0x20000000;
sram.2.end = 0x200000FF;
sram.2.attribute = MEM_UNUSED;
sram.2.mem_type = TYPE_NORMAL_READ_WRITE;
sram.2.dpm_index = 0;

flash.num =2;
flash.0.start = 0x00000000;
flash.0.end = 0x003FFFFF;
flash.0.attribute = MEM_NONSECURE;
flash.0.mem_type = TYPE_NORMAL_EXECUTE;
flash.0.dpm_index = 0;

flash.1.start = 0x10000000;
flash.1.end = 0x103FFFFF;
flash.1.attribute = MEM_SECURE;
flash.1.mem_type = TYPE_NORMAL_EXECUTE;
flash.1.dpm_index = 0;

nvram.num = 1;
nvram.0.start = 0x10038400;
nvram.0.end = 0x10038800;
nvram.0.attribute = MEM_SECURE;
nvram.0.mem_type = TYPE_NORMAL_READ_WRITE;
nvram.0.dpm_index = 0x0;

bootrom.num = 1;
bootrom.0.start = 0x400;
bootrom.0.end = 0x800;
bootrom.0.attribute = MEM_SECURE;
bootrom.0.mem_type = TYPE_NORMAL_READ_ONLY;
bootrom.0.dpm_index = 0x0;

//Freq
sys_freq.num = 1;
sys_freq.0.sys_freq = 0x300000;
sys_freq.0.pll_base = 0x10000000;
sys_freq.0.offset = 0x0;

//Key
key.num = 5;
key.0.type = ROTPK | HASH;
key.0.size = 0x8;  //Size in Words
key.0.addr = 0x11;
key.0.index = 0;

key.1.type = (HUK | FUSE_CONFIDENTIAL | FUSE_BULK | FUSE_LOCKABLE);
key.1.state = FUSE_LOCKED;
key.1.size = 0x8;  //Size in Words
key.1.addr = 0x0;
key.1.index = 0;

key.2.type = (TRUST | FUSE_CONFIDENTIAL | FUSE_BULK | FUSE_LOCKABLE);
key.2.size = 0x8;  //Size in Words
key.2.addr = 0x0;
key.2.index = 0;

key.3.type = (STATIC | FUSE_BULK | FUSE_LOCKABLE);
key.3.state = FUSE_OPEN;
key.3.size = 0x8;  //Size in Words
key.3.addr = 0x11;
key.3.index = 0;

key.4.type = REVOKE;
key.4.size = 0x8;  //Size in Words
key.4.addr = 0x11;
key.4.index = 0;

//fuse
fuse.num = 5;
fuse.0.type = FUSE_OPEN;
fuse.0.size = 0x1;
fuse.0.addr = 0x22;

fuse.1.type = FUSE_HW_IP;
fuse.1.addr  = 0x0;
fuse.1.size  = 0x1;

fuse.2.type = FUSE_LOCKED;
fuse.2.addr = 0x11;
fuse.2.size = 0x8;

fuse.3.type = FUSE_USER;
fuse.3.addr = 0x23;
fuse.3.size = 0x1;

fuse.4.type = FUSE_CONFIDENTIAL;
fuse.4.addr = 0x11;
fuse.4.size = 0x1;

//Miscellaneous
ver_count.num = 2;
ver_count.0.fw_ver_type = TRUSTED;
ver_count.0.fw_ver_cnt_max = 64;

ver_count.1.fw_ver_type = NON_TRUSTED;
ver_count.1.fw_ver_cnt_max = 256;

dut.num = 1;
dut.0.test_binary_src_addr = 0x10052800;
dut.0.test_binary_in_ram = 1;
dut.0.s_addr = 0x10028000;
dut.0.ns_addr = 0x003FBC00;
dut.0.nsc_addr = 0x003FDC00;
dut.0.s_test_addr = 0x10020000;
dut.0.ns_test_addr = 0x003F7C00;

//DPM
dpm.num = 1;
dpm.0.index = 0;
dpm.0.unlock_token = TOKEN_PASSWD;
dpm.0.is_controlling_secure = 0x1;
dpm.0.data_addr = 0x207ffff4;
dpm.0.flag_addr = 0x207ffff0;
dpm.0.passwd[0] = 'P';
dpm.0.passwd[1] = '@';
dpm.0.passwd[2] = 's';
dpm.0.passwd[3] = 's';
dpm.0.passwd[4] = 'w';
dpm.0.passwd[5] = 'o';
dpm.0.passwd[6] = 'r';
dpm.0.passwd[7] = 'd';
dpm.0.passwd_size = 16; // Size in bytes
dpm.0.certificate_unlock_algo = NONE;

//CRYPTO
crypto.num = 2;
crypto.0.base = 0x40088000;
crypto.0.attribute = NONSECURE_PROGRAMMABLE;

crypto.1.base = 0x50088000;
crypto.1.attribute = SECURE_PROGRAMMABLE;
